<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2017-09-25T08:52:55-07:00</updated><id>http://localhost:4000/</id><title type="html">Notes about crypto</title><subtitle>Mehdi Ait Oufkir discussing cryptocurrency, cryptoasset and Bitcoin for his own good.
</subtitle><entry><title type="html">Proof of work</title><link href="http://localhost:4000/2017/09/20/proof-of-work.html" rel="alternate" type="text/html" title="Proof of work" /><published>2017-09-20T01:05:41-07:00</published><updated>2017-09-20T01:05:41-07:00</updated><id>http://localhost:4000/2017/09/20/proof-of-work</id><content type="html" xml:base="http://localhost:4000/2017/09/20/proof-of-work.html">&lt;p&gt;The blockchain is the information architecture that allows us to store the ledger for peer-to-peer cash. And the proof-of-work is the assurance that the ledger is acutally valid. The idea was borrowed from Adam’s Back Hashback [1]. It uses the notion of letting adding to the block in the blockchain a proof that a really hard computational work has been done. It “proves” that very complicated “work” has been done, hence ‘proof-of-work’. The main driver for this is to make it very hard to counterfeit to blocks in the block chain. And another notion that is important is that it’s harder to counterfeit older entries in the block chain. The proof-of-work means it’s really hard to counterfeit the the block, it also means that it cost money (electricity needed to run the computers to come up with the proof-of-work), this is when the right &lt;a href=&quot;/2017/09/16/incentives-against-fraud.html&quot;&gt;incentives&lt;/a&gt;  becomes important.&lt;/p&gt;

&lt;p&gt;What is actually the hard problem that constitute “proof-of-work”?&lt;/p&gt;

&lt;p&gt;Let’s start with a cryptographic hash function. It’s a function (a small program that computer understand) that can take any message as an input and produce as an output a sequence of bits. 
Here are a few properties for a cryptographic has function:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The output has a fixed length.&lt;/li&gt;
  &lt;li&gt;The content of the ouput will completely change even if the input change just a tiny bit.&lt;/li&gt;
  &lt;li&gt;The content of the output looks completely random compare to input, and figuring out the input based on the output is pretty much infeasible.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;sha256 is the basic crypographic hash function that will be used for our ‘proof-of-work’. Here is how it works:&lt;/p&gt;

&lt;p&gt;sha256(‘hello’) = ‘’
sha256(‘hell0’) = ‘’&lt;/p&gt;

&lt;p&gt;See! Completely different results, for very similar input. Thanks to the 3rd property above, if we are given the output of that function, and wanted to come up with the message that was the input, there is not better way than try every possible guess of the function, and scan each of the response to see if it’s the same as the output that we want to match.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Solves a very hard problem and be -&amp;gt; because it’s&lt;/li&gt;
  &lt;li&gt;rewarded&lt;/li&gt;
  &lt;li&gt;dumb work: useless&lt;/li&gt;
&lt;/ul&gt;</content><author><name></name></author><summary type="html">The blockchain is the information architecture that allows us to store the ledger for peer-to-peer cash. And the proof-of-work is the assurance that the ledger is acutally valid. The idea was borrowed from Adam’s Back Hashback [1]. It uses the notion of letting adding to the block in the blockchain a proof that a really hard computational work has been done. It “proves” that very complicated “work” has been done, hence ‘proof-of-work’. The main driver for this is to make it very hard to counterfeit to blocks in the block chain. And another notion that is important is that it’s harder to counterfeit older entries in the block chain. The proof-of-work means it’s really hard to counterfeit the the block, it also means that it cost money (electricity needed to run the computers to come up with the proof-of-work), this is when the right incentives becomes important.</summary></entry><entry><title type="html">Incentives against fraud</title><link href="http://localhost:4000/2017/09/16/incentives-against-fraud.html" rel="alternate" type="text/html" title="Incentives against fraud" /><published>2017-09-16T01:05:41-07:00</published><updated>2017-09-16T01:05:41-07:00</updated><id>http://localhost:4000/2017/09/16/incentives-against-fraud</id><content type="html" xml:base="http://localhost:4000/2017/09/16/incentives-against-fraud.html">&lt;p&gt;The electronic cash created is valuable only if we solve for &lt;a href=&quot;/2017/08/28/double-spending.html&quot;&gt;double spending&lt;/a&gt;. The blockchain is the solution to prevent double spending and thus ensure the currency has value. The genius of Nakamoto, is to reward the miners doing all the hardwork of securing the blockchain with the same electronic cash they help securing. It’s a self-contained solution, it does not add dependencies to any other systems.&lt;/p&gt;

&lt;p&gt;Miners are mining blocks. Mining is cute metaphor (comparison with mining gold) for creating the proof-of-work. The reason why the “mining” metaphor works so well is because for every block successfully mined, 1/ the miner gets rewarded with electronic cash, 2/ new coins are introduced in the circulation. Instead of needing a central authority that gets paid to keep your bank account secure, anyone with computing power in the world and connected to the internet can get rewarded for helping keeping the system secured.&lt;/p&gt;

&lt;p&gt;At the top of a new block (&lt;code class=&quot;highlighter-rouge&quot;&gt;header&lt;/code&gt;) the miner is allowed to create a new digital coin (the block reward) and make himself the owner of that coin.&lt;/p&gt;

&lt;p&gt;There is a limited number of coins that will ever be issued (21 million bitcoins by 2140). Introducing new coins via the block reward helps distributing coins in the system. This makes the currency itself inflationary until 2140, then deflationary because people will inevitably lose their &lt;a href=&quot;/2017/08/16/cryptography.html&quot;&gt;public or private key&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This is why there is also another type of reward for the miner: the transaction fee. The miners get rewarded with the new coin created and the transaction fee. Both values change over time based how close we are to the 21 million coins in circulation and on the fee market (cf. below). The people transacting pay the fee to improve their chance to get their transactions added to the blockchain.&lt;/p&gt;

&lt;p&gt;The amount of work required to compute the proof-of-work is configurable so that it matches the pace of creating a new block every 10 minutes. If there are a lot of miners trying to solve the really hard problem, by default the probability of solving it faster is higher, so the algorithm self configures to make the problem harder. If there is almost no-one in the network trying to solve the hard problem then the probability of finding a solution in 10 minutes is actuallly harder so the algorithm configures itself to be easier.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Potential frauds&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Anyone interested in assembling enough computing power to attack the system is better off working towards making the system actually work because the cost/reward ratio is in favor of being honest. It would cost a lot of money (more than 50% of the total computing power participating) to defraud people. It actually earns money to help run the system smoothly. The incentives are aligned to help run an honest system.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Controlled reward structure and market&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In a centralized economy, the currency is generated at a rate that is decided by a central bank. It attempts to match the growth of the amount of goods that are exchanged in the said economy. In our decentralized monetary system, the supply is controlled by the algorithm ran accross each participant of the system. The block reward value has been set to decrease by 50% every 4 years (it’s currently – 2017: 12 coins). It is how the supply of bitcoin is controlled.&lt;/p&gt;

&lt;p&gt;The most innovative systems mix two seemingly orthogonal concepts into a perfectly coherent ecosystem. Decentralization and market economy make a perfect combination for digital currencies. The decentralization brings protection against illegitamicy of a once trusted third party. Market economy provides efficiency to keep the system running at the lowest maintainable cost possible.&lt;/p&gt;

&lt;p&gt;As the currency development stablizes and usage increases, the incentives (mining reward and transactions) will self-regulate via supply &amp;amp; demand. The demand being the people wanting get their transactions on the blockchain, and willing to pay certain price (fees) for it. And the supply being the miner wanting to gain the block reward and the fee. The block reward value is slowly decreasing and the proof-of-work is more or less hard to compute depending on the number of people trying to solve it. On the other side, the transaction fee looks more like a pure market. The people transacting who want priority to get on the blockchain will pay a higher fee to get prioritized, and the people that don’t pay will be added to the blockchain at a later date.&lt;/p&gt;

&lt;p&gt;If we want to think at of our peer-to-peer electronic cash not only as a store of value, but also as a medium of exchange, this means that there is an opportunity to augment the current bitcoin protocol. And this need is not staying unanswered.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/mohitmamoria&quot;&gt;Mohit&lt;/a&gt; for reviewing drafts of this.&lt;/p&gt;</content><author><name></name></author><summary type="html">The electronic cash created is valuable only if we solve for double spending. The blockchain is the solution to prevent double spending and thus ensure the currency has value. The genius of Nakamoto, is to reward the miners doing all the hardwork of securing the blockchain with the same electronic cash they help securing. It’s a self-contained solution, it does not add dependencies to any other systems.</summary></entry><entry><title type="html">Blockchain against double spending</title><link href="http://localhost:4000/2017/08/28/double-spending.html" rel="alternate" type="text/html" title="Blockchain against double spending" /><published>2017-08-28T18:00:00-07:00</published><updated>2017-08-28T18:00:00-07:00</updated><id>http://localhost:4000/2017/08/28/double-spending</id><content type="html" xml:base="http://localhost:4000/2017/08/28/double-spending.html">&lt;p&gt;We created &lt;a href=&quot;/2017/08/05/transactions.html&quot;&gt;electronic cash out of bits&lt;/a&gt; and used &lt;a href=&quot;/2017/08/16/cryptography.html&quot;&gt;digital signatures&lt;/a&gt; to authenticate recipients of transactions without requiring a central trusted authority. We also know that we have one problem that we haven’t solved quite yet: double spending.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Concrete example of the double spending problem&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Abraham is owner of an &lt;a href=&quot;/2017/08/05/transactions.html&quot;&gt;electronic coin&lt;/a&gt;. Abraham pays Raymond for a random service with that electronic coin – Abraham makes a copy of the existing list of transactions and marks Raymond as the new owner of the coin. Raymond verifies that it has not been forged (thanks to Abraham’s &lt;a href=&quot;/2017/08/16/cryptography.html&quot;&gt;digital signature&lt;/a&gt;). Raymond is now the proud owner of the electronic coin.&lt;/p&gt;

&lt;p&gt;Abraham decides that he also wants to buy an ebook (from Laurie this time). He no longer owns any coins. He takes the previous copy of the list of transactions (before he marked Raymond as the owner) and marks Laurie as the new owner. Laurie verifies that it has not been forged. Laurie is now the proud owner of the same coin. Problem: Abraham spent the same coin 2 times. That’s called double spending, and is makes our currency not viable.&lt;/p&gt;

&lt;p&gt;The only way for Laurie to confirm that there was no other transactions (with that coin) is for Laurie to be aware of every single transactions that ever happened. If Laurie had access to the history of that coin, she would have been able to see that Abraham had already spent the coin to pay Raymond.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How do you make sure that everyone has access to the whole list of transactions?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Every transactions is broadcasted to the world. Anyone can listen in (the same way they tune in a radio station) and they add each transactions to their list.&lt;/p&gt;

&lt;p&gt;The problem with broadcasting on the Internet is that not everyone will receive messages in the same order, and we do have to ensure order otherwise Laurie might receive the coin before Raymond. The way to solve for this is to &lt;strong&gt;group transactions together&lt;/strong&gt; and to add a timestamp to it.&lt;/p&gt;

&lt;p&gt;Let’s say group A has transaction 1, transaction 2, transaction 3 and transaction 4. The timestamp (&lt;code class=&quot;highlighter-rouge&quot;&gt;2017-08-23 23:11:11&lt;/code&gt;) is added to that group. We take all of this information inside group A and instead of calling group A, we generate a name (called a hash), thanks to hash function[1].&lt;/p&gt;

&lt;p&gt;Group B has transaction 5, transaction 6, a timestamp (&lt;code class=&quot;highlighter-rouge&quot;&gt;2017-08-23 23:21:11&lt;/code&gt;) and the hash of group A.&lt;/p&gt;

&lt;p&gt;Group C has transaction 7, transaction 8, transaction 9, a timestamp (&lt;code class=&quot;highlighter-rouge&quot;&gt;2017-08-23 23:31:11&lt;/code&gt;) and the hash of group B.&lt;/p&gt;

&lt;p&gt;A group of transactions is linked to the previous thanks to the hash of the previous group (which is unique based on the content of the group). In the world of Bitcoin, the groups are called blocks, and the link is call chain. We now have our concept of blockchain.&lt;/p&gt;

&lt;p&gt;Here is a representation of it.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--&amp;gt; hash of block A  -----------------&amp;gt; hash of block B  -------------------------&amp;gt; hash of block C
    * transaction 1                     * transaction 5                             * transaction 7
    * transaction 2                     * transaction 6                             * transaction 8
    * transaction 3                     * timestamp: 2017-08-23..                   * transaction 9
    * transaction 4                     * hash of block A                           * timestamp: 2017...
    * timstamp: 2017-08-23                                                          * hash of block B
    * hash of block Z
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;One of the neat trick of in the blockchain invention is that if you want to change block A you have to change block B and block C. If you change one single character in the content of a block (the timestamp, the transaction, etc..) the hash of the block will change. If the hash changes then the reference to it from the next block will be broken. Concretely: if someone wants to alter a block from a few days ago, the link will be broken, unless that someone decides to recreate the chain of blocks starting that point.&lt;/p&gt;

&lt;p&gt;We now have a nice blockchain (transactions grouped together and linked to the preivous one). The question you should be asking yourself is where does that blockchain live. We keep saying Laurie broadcast the transaction, but what does that actually mean? We can’t use a website to host the blockchain (that would be a central authority). The solution: we let everyone host a copy of the blockchain. Instead of having one blockchain we have a many copies of the blockchain. Unfortunately, even with the timestamp solution we introduced, we can’t assure that all the timestamped blocks are going to be identic if everyone is creating block based on the transaction their are receiving.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Satoshi_Nakamoto&quot;&gt;Satoshi Nakamoto&lt;/a&gt; introduced a rule which states that we trust the blockchain that has the most computational work put into it. Computional work is a good way to get concensus on the what is the correct blockchain because it takes a lot of effort (in our case CPU cycles) to be the one that has generated the longest blockchain. CPU cycles needs electricity and electricity cost money. It would require a lot money (electricity) to fraudulently manipulate the blockchain.&lt;/p&gt;

&lt;p&gt;As designed above, our blocks are fairly simple to compute right now. We can almost build them by hand; a computer would barely need to work to compute them. Satoshi is actually adding articial work to build each of the block. So each of the block needs to have a &lt;strong&gt;proof-of-work&lt;/strong&gt; which requires your computer to work very very hard in order to compute. It uses a nice little trick with cryptographic hash function that will get into next. Let’s say, that the most powerful computer you ever worked with would struggle to do that work. Essentially, we need to make sure that our block looks something like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;--&amp;gt; hash of block A  -----------------&amp;gt; hash of block B  -------------------------&amp;gt; hash of block C
    * transaction 1                     * transaction 5                             * transaction 7
    * transaction 2                     * transaction 6                             * transaction 8
    * transaction 3                     * timestamp: 2017-08-23..                   * transaction 9
    * transaction 4                     * hash of block A                           * timestamp: 2017...
    * timstamp: 2017-08-23              * proof-of-work                             * hash of block B
    * hash of block Z                                                               * proof-of-work
    * proof-of-work
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Not everyone is actually asked to create the &lt;strong&gt;proof-of-work&lt;/strong&gt;. Those who do are called miners (Analogy to mining gold). And the miner are actually rewarded for doing the work. They are rewarded with the same money that they are actually trying to secure. It’s one of the genius of Nakamoto. It’s the &lt;a href=&quot;/2017/09/16/incentives-against-fraud.html&quot;&gt;incentive&lt;/a&gt; part of bitcoin.&lt;/p&gt;

&lt;p&gt;We now have a protocol where miners are trying to create the last block based on the transaction they received. Since they are working in parallel (also since there might be fraudsters), there will be cases when blockchains with different content will appear on the network. We agree as a group that we need always trust the blockchain that is the longest, and throw away the other chains. And this how we get to decentralize concensus on what the list of full transactions is actually accurate.&lt;/p&gt;

&lt;p&gt;[1] A &lt;a href=&quot;https://en.wikipedia.org/wiki/Hash_function&quot;&gt;hash function&lt;/a&gt; is method that maps a arbitrary size data to a fixed size data.&lt;/p&gt;</content><author><name></name></author><summary type="html">We created electronic cash out of bits and used digital signatures to authenticate recipients of transactions without requiring a central trusted authority. We also know that we have one problem that we haven’t solved quite yet: double spending.</summary></entry><entry><title type="html">Cryptography applied to elecronic cash</title><link href="http://localhost:4000/2017/08/16/cryptography.html" rel="alternate" type="text/html" title="Cryptography applied to elecronic cash" /><published>2017-08-16T18:00:00-07:00</published><updated>2017-08-16T18:00:00-07:00</updated><id>http://localhost:4000/2017/08/16/cryptography</id><content type="html" xml:base="http://localhost:4000/2017/08/16/cryptography.html">&lt;p&gt;In order to build a peer-to-peer electronic cash system, we can’t rely on a central trusted third party (It wouldn’t really be peer-to-peer otherwise). One of the major service[1] a central trusted third party provides is to verify identities when one wants to transact.&lt;/p&gt;

&lt;p&gt;Let’s take the example of Venmo. Venmo is a central trusted third-party. If Laurie sends money to Raymond through the Venmo application. Venmo handles the identification and authentication (phone number + password, email + password or Touch ID, etc.). Venmo validates the identities of Laurie (to send the money) and Raymond (to receive the money).&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;https://en.wikipedia.org/wiki/Satoshi_Nakamoto&quot;&gt;Nakamoto&lt;/a&gt;’s quest to build an eletronic peer-to-peer cash system, he hoped to avoid by-pass a trusted third-party.[2]&lt;/p&gt;

&lt;p&gt;Without a trusted third-party, we are be forced to trust no-one. We still want to transact though. So here is the trick: we make all the transactions available to everyone: completely public. Anyone interested in looking at the electronic transactions can look at them, copy them. Everyone knows who’s buying from who (transacting). The person who’s initiating the transaction makes the transaction public to anyone that has an internet connection.&lt;/p&gt;

&lt;p&gt;So now, we have a list of transactions (electronic cash) with Raymond’s name on it (because he is the last owner). Raymond is the owner of the electronic cash. It has value to Raymond. It probably has value to someone else too. The main problem is: what stops Raymond’s nemesis (Abraham), from copying that list of transactions, adding another transaction at the end of the list that claims that he is the new owner? If Abraham does this, and publishes back on the internet, at this point Abraham would have stolen the electronic cash from Raymond! No one would want to use a cash system that could so easily be robbed.&lt;/p&gt;

&lt;p&gt;Public key cryptography is a sub-field of cryptography that provides a solution to this problem. It provides a mathematical mechanism to validate that the transaction was agreed upon with no way for Abraham to fake a transaction.&lt;/p&gt;

&lt;p&gt;What we are concretely trying to do is verify that a transaction (Laurie sends money to Raymond) was allowed by Laurie, and provide the assurance that Laurie can’t deny that she allowed it.&lt;/p&gt;

&lt;p&gt;The mathematics behind digital signature is pretty complex and there are &lt;a href=&quot;https://www.youtube.com/watch?v=YEBfamv-_do&quot;&gt;great resources&lt;/a&gt; that get in the details of it.&lt;/p&gt;

&lt;p&gt;Laurie needs to create a public key and a private key. The public key is what identifies Laurie, and what is provided in order to receive a transaction. (Laurie doesn’t actually give her name –it’s also useful for anonimity[3]–). The private key is something that you keep very secure and you don’t share with everyone. Treat even more carefully than a password, because you can’t change it.&lt;/p&gt;

&lt;p&gt;Laurie has:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Public key&lt;/li&gt;
  &lt;li&gt;Private key&lt;/li&gt;
  &lt;li&gt;Public key of Raymond (who’s suppose to receive the electronic cash)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Laurie uses a mathematical method to generate a string of characters based on all of these information: it’s called “signing”, and it generates the what’s called the signature.&lt;/p&gt;

&lt;p&gt;Anyone in the network has:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Laurie’s public key.&lt;/li&gt;
  &lt;li&gt;Raymond’s public key (the new owner).&lt;/li&gt;
  &lt;li&gt;The signature.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;There is an easy way (mathematical method) to look at the signature and confirm that it was actually signed by Laurie, and no-one else. This also assures that Laurie signed it. She can’t claim she didn’t do it because only someone with Laurie’s private key could have generated that signature.&lt;/p&gt;

&lt;p&gt;If you like to think in analogies, here is how you need to think about it: the signature is a wax seal on an envelope. Anyone can open the envelope and look at the content, but the presence of the seal proves that the content was added in the envelope by the sender.&lt;/p&gt;

&lt;p&gt;Now what we used to have trusted third parties to help us ensure the identities of everyone involved in a transaction. We applied cryptography to ensure identities wihtout the need of third-parties.
Third-parties also provide a solution against &lt;a href=&quot;/2017/08/28/double-spending.html&quot;&gt;double spending&lt;/a&gt; which is important to solve to have usable electronic cash system. Interestingly enough, cryptography also provides a solution to the ‘double spending’ problem. We will cover it next.&lt;/p&gt;

&lt;p&gt;[1] Double spending is another really important benefit that I’ll discuss in a future post.&lt;br /&gt;
[2] Removing a trusted third-party is important and fascinating for a lot of reason that I won’t discuss in this piece. Bear with me: just assume that it is for the better, at least for the sake of this discussion.&lt;br /&gt;
[3] Anonmininty is another property of cash tha tis pretty cool and that I will eventually discuss.&lt;/p&gt;</content><author><name></name></author><summary type="html">In order to build a peer-to-peer electronic cash system, we can’t rely on a central trusted third party (It wouldn’t really be peer-to-peer otherwise). One of the major service[1] a central trusted third party provides is to verify identities when one wants to transact.</summary></entry><entry><title type="html">Electronic peer-to-peer transactions</title><link href="http://localhost:4000/2017/08/05/transactions.html" rel="alternate" type="text/html" title="Electronic peer-to-peer transactions" /><published>2017-08-05T21:05:41-07:00</published><updated>2017-08-05T21:05:41-07:00</updated><id>http://localhost:4000/2017/08/05/transactions</id><content type="html" xml:base="http://localhost:4000/2017/08/05/transactions.html">&lt;blockquote&gt;
  &lt;p&gt;I’m not trying to explain or define bitcoin in this piece. I &lt;a href=&quot;/about&quot;&gt;like to study in small concrete pieces&lt;/a&gt; of a bigger concept in order to understand the whole picture. In this article I’m diving into the electronic peer-to-peer transaction piece of bitcoin. It’s missing important and innovative parts. If one doesn’t truly understand the peer-to-peer transaction piece, the whole picture will always look off. No matter how much time you spend on the innovative part of bitcoin.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Let’s look at how a person-to-person transaction works in the real world. There is cash. Someone has that cash in their possession. They can decide to hand it over to someone else for exchange of goods or services.&lt;/p&gt;

&lt;p&gt;To put in the most simple way, there are three properties:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The cash has a perceived value shared by both parties. (let’s not worry about the notion of value for the purpose of this discussion)&lt;/li&gt;
  &lt;li&gt;Someone can prove it owns the cash, by the sole fact that the cash is in their possession. (Let’s not worry about stolen cash, or counterfeit)&lt;/li&gt;
  &lt;li&gt;There is an easy way to transfer the cash to someone else.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In order to accomplish this in the electronic world, Satoshi Nakamoto has a few tricks:&lt;/p&gt;

&lt;p&gt;Picture a list of transactions digitally recorded. Every transaction references the previous one (it’s a chain of transactions). A transaction contains information about to the owner (the recipient of the transaction), a reference to the previous transaction (that’s the link in the chain), and the proof that the previous owner has aggreed to do the transaction. When a new transaction is added, it references back to the previous transaction.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;That chain of transactions is an eletronic coin.&lt;/strong&gt; Why?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Because people perceive there is value in being the current (last) owner. [1]&lt;/li&gt;
  &lt;li&gt;Someone can ‘prove’ that he is the owner of the electronic coin. (we will briefly discuss how the proof is provided later).&lt;/li&gt;
  &lt;li&gt;There is a mechanism to transfer that electronic coin to someone else.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The leap of faith of believing that the chain of transactions is actual electronic cash is the hardest part. It feels fake, intangible, but at the end of the day, what makes you think that a piece of paper with “in god we trust” printed on it is actually cash? Because people around you also assign value to it.[2]&lt;/p&gt;

&lt;p&gt;The concept is the same for electronic cash.&lt;/p&gt;

&lt;p&gt;Satoshi wants us to use cryptogaphy to ‘prove’ ownership. An owner signs the transaction and adds the signature to a transaction when transfering ownership. In very short, “signing” is a mathematical method to create a list of characters that demonstrate the authenticity of any digital message or document; in our case the transaction.&lt;/p&gt;

&lt;p&gt;Here is how a transaction works:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Owner #1 is the current owner of the electronic coin.&lt;/li&gt;
  &lt;li&gt;Owner #1 decides to transact and transfer the electronic coin to owner #2.&lt;/li&gt;
  &lt;li&gt;Owner #1 gets a public identifier of owner #2, a reference to the previous transaction (that describes how he became the current owner), and its own digital signature.&lt;/li&gt;
  &lt;li&gt;A new transaction is created with all of that information.&lt;/li&gt;
  &lt;li&gt;Owner #2 can verify that the signature is correct and is now the owner of the electronic coin.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If a malicious person claimed to be the owner of the coin, let’s call him owner X. And he tries to transact, then owner #2 can look at the signatures in the chain of transactions and see if it all looks proper. If Owner X created the coin out of thin air, somewhere in the chain the signature will not match its respective owner.&lt;/p&gt;

&lt;p&gt;With this method we can now prove ownership of electronic coin, transfer this coin. And no-one can fake ownership of the electronic coin.&lt;/p&gt;

&lt;p&gt;The obvious major problem that Satoshi needs to address is the fact that the owner of the electronic coin can send multiple time the same electronic coin without being caught. That’s called &lt;a href=&quot;/2017/08/28/double-spending.html&quot;&gt;double spending&lt;/a&gt;, and that’s the main reason why banks play a role in our current system. Satoshi has a solution for this, and I’ll cover this later, once I spend more time discussing the digital signature process in more details.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Thought experiment&lt;/em&gt;:
Without getting too utopian about the application of Satoshi’s idea, but to give you sense of how powerful the concept is, try to change the words “electronic coin” with “digital asset” in this essay. Electronic coin limits the imagination to the cash metaphore, but digital asset can take us in a lot of different places.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/mohitmamoria&quot;&gt;Mohit&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/spolu&quot;&gt;Stan&lt;/a&gt; for reviewing drafts of this.&lt;/p&gt;

&lt;p&gt;[1] Being the current owner of a coin use to be priced at a few cents in 2010 to over $3000 in early August 2017.&lt;br /&gt;
[2] USD is not backed by gold since 1971.&lt;/p&gt;</content><author><name></name></author><summary type="html">I’m not trying to explain or define bitcoin in this piece. I like to study in small concrete pieces of a bigger concept in order to understand the whole picture. In this article I’m diving into the electronic peer-to-peer transaction piece of bitcoin. It’s missing important and innovative parts. If one doesn’t truly understand the peer-to-peer transaction piece, the whole picture will always look off. No matter how much time you spend on the innovative part of bitcoin.</summary></entry></feed>